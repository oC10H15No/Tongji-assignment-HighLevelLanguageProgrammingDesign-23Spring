/* 2351050 杨瑞晨 信05 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; str[i] != '\0'; i++)
        ;
    return i; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int temp = tj_strlen(s1);
    for (int i = tj_strlen(s1); i <= temp + tj_strlen(s2); i++)
        s1[i] = s2[i - temp]; 
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    int temp = tj_strlen(s1);
    for (i = tj_strlen(s1); i < temp + (len <= tj_strlen(s2) ? len : tj_strlen(s2)); i++)
        s1[i] = s2[i - temp];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; s2[i] != '\0'; i++)
        s1[i] = s2[i];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; i < (len <= tj_strlen(s2) ? len : tj_strlen(s2)); i++)
        s1[i] = s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int temp;
    for (int i = 0; i <= (tj_strlen(s1) <= tj_strlen(s2) ? tj_strlen(s1) : tj_strlen(s2)); i++)
        if (s1[i] != s2[i]) {
            temp = (int)(s1[i] - s2[i]);
            return temp;
        }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int temp;
    for (int i = 0; i <= (tj_strlen(s1) <= tj_strlen(s2) ? tj_strlen(s1) : tj_strlen(s2)); i++) {
        int temp1 = s1[i];
        int temp2 = s2[i];
        if (temp1 >= 'A' && temp1 <= 'Z')
            temp1 += ('a' - 'A');
        if (temp2 >= 'A' && temp2 <= 'Z')
            temp2 += ('a' - 'A');
        if (temp1 != temp2) {
            temp = temp1 - temp2;
            return temp;
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int temp;
    int min_len = tj_strlen(s1) <= tj_strlen(s2) ? tj_strlen(s1) : tj_strlen(s2);
    for (int i = 0; i < (len <= min_len ? len : min_len + 1); i++)
        if (s1[i] != s2[i]) {
            temp = (int)(s1[i] - s2[i]);
            return temp;
        }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int temp;
    int min_len = tj_strlen(s1) <= tj_strlen(s2) ? tj_strlen(s1) : tj_strlen(s2);
    for (int i = 0; i < (len <= min_len ? len : min_len + 1); i++) {
        int temp1 = s1[i];
        int temp2 = s2[i];
        if (temp1 >= 'A' && temp1 <= 'Z')
            temp1 += ('a' - 'A');
        if (temp2 >= 'A' && temp2 <= 'Z')
            temp2 += ('a' - 'A');
        if (temp1 != temp2) {
            temp = temp1 - temp2;
            return temp;
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i < tj_strlen(str); i++) {
        if (str[i] >= 'a' && str[i] <= 'z')
            str[i] -= ('a' - 'A');
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; i < tj_strlen(str); i++) {
        if (str[i] >= 'A' && str[i] <= 'Z')
            str[i] += ('a' - 'A');
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; i < tj_strlen(str); i++) {
        if (ch == str[i])
            return i + 1;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i, j, temp = 0;
    for (i = 0; str[i] != '\0'; i++) {
        if (str[i] == substr[0]) {
            temp = i;
            for (j = 0; substr[j] != '\0'; j++) {
                if (str[i + j] != substr[j])
                    break;
            }
            if (substr[j] == '\0')
                return temp + 1;
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = tj_strlen(str); i >= 0; i--) {
        if (ch == str[i])
            return i + 1;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i, j, temp = 0;
    for (i = tj_strlen(str); i >= 0; i--) {
        if (str[i] == substr[0]) {
            temp = i;
            for (j = 0; substr[j] != '\0'; j++) {
                if (str[i + j] != substr[j])
                    break;
            }
            if (substr[j] == '\0')
                return temp + 1;
        }
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int start = 0;
    int end = tj_strlen(str) - 1; 
    char temp;

    while (start < end) {
        temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }
    return 0; //return值可根据需要修改
}
